
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: jobs.pipelines.gst.io
spec:
  group: pipelines.gst.io
  names:
    kind: Job
    listKind: JobList
    plural: jobs
    singular: job
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.src.name
      name: Src
      type: string
    - jsonPath: .spec.sinks[*].name
      name: Sinks
      type: string
    - jsonPath: .status.conditions[-1].message
      name: Status
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Job is the Schema for the jobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JobSpec defines the desired state of Job
            properties:
              pipelineRef:
                description: A reference to the pipeline for this job's configuration.
                properties:
                  kind:
                    description: Kind is the type of the Pipeline CR
                    type: string
                  name:
                    description: Name is the name of the Pipeline CR
                    type: string
                required:
                - kind
                - name
                type: object
              sinks:
                description: The output objects for the pipeline.
                items:
                  description: Object represents either a source or destination object
                    for a job.
                  properties:
                    config:
                      description: The endpoint and bucket configurations for the
                        object.
                      properties:
                        minio:
                          description: Configurations for a MinIO source or sink
                          properties:
                            bucket:
                              description: In the context of a src config, the bucket
                                to watch for objects to pass through the pipeline.
                                In the context of a sink config, the bucket to save
                                processed objects.
                              type: string
                            credentialsSecret:
                              description: The secret that contains the credentials
                                for connecting to MinIO. The secret must contain two
                                keys. The `access-key-id` key must contain the contents
                                of the Access Key ID. The `secret-access-key` key
                                must contain the contents of the Secret Access Key.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            endpoint:
                              description: The MinIO endpoint *without* the leading
                                `http(s)://`.
                              type: string
                            endpointCA:
                              description: A base64-endcoded PEM certificate chain
                                to use when verifying the certificate supplied by
                                the MinIO server.
                              type: string
                            exclude:
                              description: A regular expression to filter out items
                                placed in the `key`. Only makes sense in the context
                                of a src config. This can be useful when chaining
                                pipelines. You may want to exclude the "*_tmp" expression
                                to filter out the temporary objects created while
                                the miniosink is rendering the output of a pipeline,
                                since it first creates chunked objects, and then pieces
                                them together with the ComposeObject API.
                              type: string
                            insecureNoTLS:
                              description: Do not use TLS when communicating with
                                the MinIO API.
                              type: boolean
                            insecureSkipVerify:
                              description: Skip verification of the certificate supplied
                                by the MinIO server.
                              type: boolean
                            key:
                              description: In the context of a src config, a directory
                                prefix to match for objects to be sent through the
                                pipeline. An empty value means ALL objects in the
                                bucket, or the equivalent of `/`. In the context of
                                a sink config, a go-template to use for the destination
                                name. The template allows sprig functions and is passed
                                the value "SrcName" representing the base of the key
                                of the object that triggered the pipeline, and "SrcExt"
                                with the extension. An empty value represents using
                                the same key as the source which would only work for
                                objects being processed to different buckets and prefixes.
                              type: string
                            region:
                              description: The region to connect to in MinIO.
                              type: string
                          type: object
                      type: object
                    name:
                      description: The actual name for the object being read or written
                        to. In the context of a source object this is pulled from
                        a watch event. In the context of a destination this is computed
                        by the controller from the user supplied configuration.
                      type: string
                    streamType:
                      description: The type of the stream for this object. Only applies
                        to sinks. For a split transform pipeline there will be an
                        Object for each stream. Otherwise there will be a single object
                        with a StreamTypeAll.
                      type: string
                  required:
                  - config
                  - name
                  - streamType
                  type: object
                type: array
              src:
                description: The source object for the pipeline.
                properties:
                  config:
                    description: The endpoint and bucket configurations for the object.
                    properties:
                      minio:
                        description: Configurations for a MinIO source or sink
                        properties:
                          bucket:
                            description: In the context of a src config, the bucket
                              to watch for objects to pass through the pipeline. In
                              the context of a sink config, the bucket to save processed
                              objects.
                            type: string
                          credentialsSecret:
                            description: The secret that contains the credentials
                              for connecting to MinIO. The secret must contain two
                              keys. The `access-key-id` key must contain the contents
                              of the Access Key ID. The `secret-access-key` key must
                              contain the contents of the Secret Access Key.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                          endpoint:
                            description: The MinIO endpoint *without* the leading
                              `http(s)://`.
                            type: string
                          endpointCA:
                            description: A base64-endcoded PEM certificate chain to
                              use when verifying the certificate supplied by the MinIO
                              server.
                            type: string
                          exclude:
                            description: A regular expression to filter out items
                              placed in the `key`. Only makes sense in the context
                              of a src config. This can be useful when chaining pipelines.
                              You may want to exclude the "*_tmp" expression to filter
                              out the temporary objects created while the miniosink
                              is rendering the output of a pipeline, since it first
                              creates chunked objects, and then pieces them together
                              with the ComposeObject API.
                            type: string
                          insecureNoTLS:
                            description: Do not use TLS when communicating with the
                              MinIO API.
                            type: boolean
                          insecureSkipVerify:
                            description: Skip verification of the certificate supplied
                              by the MinIO server.
                            type: boolean
                          key:
                            description: In the context of a src config, a directory
                              prefix to match for objects to be sent through the pipeline.
                              An empty value means ALL objects in the bucket, or the
                              equivalent of `/`. In the context of a sink config,
                              a go-template to use for the destination name. The template
                              allows sprig functions and is passed the value "SrcName"
                              representing the base of the key of the object that
                              triggered the pipeline, and "SrcExt" with the extension.
                              An empty value represents using the same key as the
                              source which would only work for objects being processed
                              to different buckets and prefixes.
                            type: string
                          region:
                            description: The region to connect to in MinIO.
                            type: string
                        type: object
                    type: object
                  name:
                    description: The actual name for the object being read or written
                      to. In the context of a source object this is pulled from a
                      watch event. In the context of a destination this is computed
                      by the controller from the user supplied configuration.
                    type: string
                  streamType:
                    description: The type of the stream for this object. Only applies
                      to sinks. For a split transform pipeline there will be an Object
                      for each stream. Otherwise there will be a single object with
                      a StreamTypeAll.
                    type: string
                required:
                - config
                - name
                - streamType
                type: object
            required:
            - pipelineRef
            - sinks
            - src
            type: object
          status:
            description: JobStatus defines the observed state of Job
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of a job's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
